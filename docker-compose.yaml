version: '3'

services:
  
  app:
    build: .
    container_name: app
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8000:8000"
      - "8080:8080"
      - "50051:50051"
    restart: unless-stopped
    environment:
      DB_DRIVER: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: orders
      WEB_SERVER_PORT: 8000
      GRPC_SERVER_PORT: 50051
      GRAPHQL_SERVER_PORT: 8080
      RABBITMQ_HOST: amqp://guest:guest@rabbitmq
      RABBITMQ_PORT: 5672
    networks:
      - default
  mysql:
    image: mysql:5.7
    container_name: mysql
    healthcheck:
      test: ["CMD", "mysql", "-u", "root", "-proot", "--execute", "SHOW DATABASES;"]
      interval: 3s
      timeout: 8s
      retries: 5
      start_period: 5s
    user: "root" 
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
    ports:
      - 3306:3306
    volumes:
      - .docker/mysql:/var/lib/mysql
    networks:
      - default
  migrate:
    image: migrate/migrate:v4.15.0
    container_name: migrate
    command: ["-path", "/migrations", "-database", "mysql://root:root@tcp(mysql:3306)/orders", "-verbose", "up"]
    depends_on:
      mysql:
        condition: service_healthy
    volumes: 
      - ./sql/migrations:/migrations
      - ./scripts/wait-for-db.sh:/wait-for-db.sh
    networks:
      - default

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - default

networks:
  default:
    name: net-orders
    driver: bridge
